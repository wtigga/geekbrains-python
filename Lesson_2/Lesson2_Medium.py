# coding=utf-8
# lesson 2, task medium
import random


print('\nЗадача-1:\n')
# Дан список, заполненный произвольными целыми числами, получите новый список,
# элементами которого будут квадратные корни элементов исходного списка,
# но только если результаты извлечения корня не имеют десятичной части и
# если такой корень вообще можно извлечь
# Пример: Дано: [2, -5, 8, 9, -25, 25, 4]   Результат: [3, 5, 2]

numbers_list = [2, -5, 8, 9, -25, 25, 4]
new_list = []

for number in numbers_list:
    square_root = (number ** 0.5) # вычисляем квадратный корень
    if type(square_root) == float: # проверяем, что корень не complex
        decimal_remainder = square_root - int(square_root) # проверяем, есть ли остаток после запятой
        if decimal_remainder == 0:
            new_list.append(int(square_root)) # добавляем в новый список
print(new_list)

print('\nЗадача-2: Дана дата в формате dd.mm.yyyy, например: 02.11.2013.\n')
# Ваша задача вывести дату в текстовом виде, например: второе ноября 2013 года.
# Склонением пренебречь (2000 года, 2010 года)

# ожидаем 'шестнадцатое июня 1989 г."

months = ['нулября', 'января', 'февраля', 'марта', 'апреля', 'мая', 'июня', 'июля', 'августа', 'сентября', 'октября', 'ноября', 'декабря']
days = ['нулевое', 'первое', 'второе', 'третье', 'четвёртое', 'пятое', 'шестое', 'седьмое', 'восьмое', 'девятое', 'десятое', 'одинадцатое', 'двенадцатое', 'тринадцатое', 'четырнадцатое', 'пятнадцатое', 'шестнадцатое', 'семнадцатое', 'восемнадцатое', 'девятнадцатое', 'двадцатое', 'двадцать первое', 'двадцать второе', 'двадцать третье', 'двадцать четвёртое', 'двадцать пятое', 'двадцать шестое', 'двадцать седьмое', 'двадцать восьмое', 'двадцать девятое', 'тридцатое', 'тридцать первое']


date = input('Введите дату в формате dd.mm.yyyy:  ')
day = int(date[0:2])
month = int(date[4:5])
year = int(date[6:11])

print("{} {} {} года".format(days[day], months[month], year))


print('\nЗадача-3: Напишите алгоритм, заполняющий список произвольными целыми числами\n')
# в диапазоне от -100 до 100. В списке должно быть n - элементов.
# Подсказка:
# для получения случайного числа используйте функцию randint() модуля random

random_numbers_list = []
x = 0
n = 150
while x < n:
    random_numbers_list.append(random.randint(-100, 100))
    x += 1
print('Список со случайными цифрами от -100 до 100: ', random_numbers_list)


print('\nЗадача-4: Дан список, заполненный произвольными целыми числами.\n')
# Получите новый список, элементами которого будут:
# а) неповторяющиеся элементы исходного списка:
# например, lst = [1, 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 2, 4, 5, 6]
# б) элементы исходного списка, которые не имеют повторений:
# например, lst = [1 , 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 4, 6]

list_x = [1, 2, 4, 5, 6, 2, 5, 2]
list_a = []  # неповторяющиеся элементы списка Х:
list_b = []  # элементы списка Х без повторений

list_a = list(set(list_x))  # в set остаются только неповторяющиеся элементы, конвертиурем обратно в лист

counter = 0
while counter < len(list_x):
    if list_x.count(list_x[counter]) == 1:  # если число в списке подсчитано только один раз
        list_b.append(list_x[counter])  # добавляем его в список
    counter += 1

print('Исходный список: ', list_x)
print('Элементы без повторов: ', list_a)
print('Уникальные элементы: ', list_b)
